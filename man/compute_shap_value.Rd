% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_shap.R
\name{compute_shap_value}
\alias{compute_shap_value}
\title{Compute SHAP values for a model}
\usage{
compute_shap_value(model_py, var_names = NULL, x_test)
}
\arguments{
\item{model_py}{A Python callable model object that has a
\code{predict_proba} function.}

\item{var_names}{String vector of name of model coefficients. If unspecified,
'X1', 'X2', etc will be used.}

\item{x_test}{A \code{data.frame} of predictors from the test set. Make sure
categorical variables are properly encoded as factors.}
}
\value{
Returns a \code{data.frame} of SHAP values, where each column
  corresponds to a variable and each row corresponds to an observation.
}
\description{
Compute SHAP values for a model
}
\examples{
data("df_compas", package = "ShapleyVIC")
head(df_compas)
# The following requires python libraries shap, sklearn, numpy and pandas,
# otherwise NULL is returned. Small training and test sets are used to reduce
# run time.
m_optim <- ShapleyVIC::logit_model_python(x_train = df_compas[1:1000, -1],
                                          y_train = df_compas$y[1:1000])
if (!is.null(m_optim)) {
  shap_vals <- ShapleyVIC::compute_shap_value(model_py = m_optim,
                                              x_test = df_compas[1001:1100, -1])
  dim(shap_vals)
  head(shap_vals)
}
}
